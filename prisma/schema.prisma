generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "rhel-openssl-3.0.x"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  email String @unique
  first_name String?
  last_name String?
  password String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  events Events[] @relation("UserEvents")
  participants Participants[] 
}

model Events {
  id Int @id @default(autoincrement())
  title String
  description String?
  sport_type String
  date_time DateTime
  max_participant Int?
  city String
  location_name String?
  latitude Float?
  longitude Float?
  price Int?
  is_private Boolean?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_id Int

  user Users @relation("UserEvents", fields: [user_id], references: [id])
  participants Participants[] 
  eventbanner EventBanners[]
}

model Participants {
  id Int @id @default(autoincrement())
  user_id Int
  event_id Int
  status String @default("joined")
  joined_at DateTime @default(now())

  user Users @relation(fields: [user_id], references: [id])
  event Events @relation(fields: [event_id], references: [id])

  @@unique([user_id, event_id])
}
model EventBanners {
  id Int @id @default(autoincrement())
  event_id Int
  name String
  size Int
  path String
  created_at DateTime @default(now())

  event Events @relation(fields: [event_id], references: [id])
}
